//
//  LeftMenuViewController.swift
//  contentstack-ecommerce-app
//
//  Created by Uttam Ukkoji on 03/12/18.
//  Copyright (c) 2018 Contentstack. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LeftMenuDisplayLogic: class
{
    func displayCategoryModal(response: LeftMenu.CategoryModal.Response)
}

class LeftMenuViewController: UIViewController, LeftMenuDisplayLogic
{
    @IBOutlet weak var tableView: UITableView!
    var interactor: LeftMenuBusinessLogic?
    var router: (NSObjectProtocol & LeftMenuRoutingLogic & LeftMenuDataPassing)?
    var categoryArray : [Category] = []
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = LeftMenuInteractor()
        let presenter = LeftMenuPresenter()
        let router = LeftMenuRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        tableView.registerNib(CategoryCell.self)
        tableView.tableFooterView = UIView()
        tableView.estimatedRowHeight = 999
        tableView.rowHeight = UITableView.automaticDimension
        doCategoryModal()
    }
    
    // MARK: Do CategoryModal
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doCategoryModal()
    {
        let request = LeftMenu.CategoryModal.Request()
        interactor?.doCategoryModal(request: request)
    }
    
    func displayCategoryModal(response: LeftMenu.CategoryModal.Response)
    {
        categoryArray = response.categoryArray
        tableView.reloadData()
    }
}

extension LeftMenuViewController : UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 2
    }
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if section == 0 {
            return 1
        }
        return categoryArray.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(for: indexPath) as CategoryCell
        if indexPath.section == 0 {
            cell.categoryTitle.text = "Home"
        }else {
            let category = categoryArray[indexPath.row]
            cell.categoryTitle.text = category.title
        }
        return cell
    }
}

extension LeftMenuViewController: UITableViewDelegate {
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if let navig = self.storyboard?.instantiateViewController(withIdentifier: "ProductListNavigation") as? UINavigationController, let productVC = navig.topViewController as? ProductListSenceViewController {
            if indexPath.section == 1 {
                let category = categoryArray[indexPath.row]
                productVC.categoryId = category.uid
            }
            if let slidPanel = self.parent as? SlidePanelViewController {
                slidPanel.centerViewController = navig
                slidPanel.closePanel()
            }
        }
    }

}
