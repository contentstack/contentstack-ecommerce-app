//
//  ProductDetailPresenter.swift
//  contentstack-ecommerce-app
//
//  Created by Uttam Ukkoji on 03/12/18.
//  Copyright (c) 2018 Contentstack. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ProductDetailPresentationLogic
{
    func showProductList(response: ProductDetail.Response)
    func showRelatedProduct()
}

class ProductDetailPresenter: ProductDetailPresentationLogic
{
    weak var viewController: ProductDetailDisplayLogic?
    
    // MARK: Do something
    
    func showProductList(response: ProductDetail.Response)
    {
        var model = [Any]()
        let productTitle = ProductDetail.ViewModel.ProductInfo(imageUrl: response.product!.featuredImage, title: response.product!.title)
        model.append(productTitle)
        let productPrice = ProductDetail.ViewModel.ProductPrice(price:response.product!.price, offerPrice: response.product!.offetPrice)
        model.append(productPrice)
        
        let productDesc = ProductDetail.ViewModel.ProductDesc(string: response.product!.desc?.htmlToAttributedString, isInStock:response.product!.in_stock, relatedProducts:response.product!.relatedProducts)
        model.append(productDesc)
        
        let viewModel = ProductDetail.ViewModel(productDetailArray:model)
        viewController?.showDetails(viewModel: viewModel)
    }
    
    func showRelatedProduct() {
        viewController?.showRelatedProductView()
    }
}

